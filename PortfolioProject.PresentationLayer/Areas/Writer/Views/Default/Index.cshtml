@model List<PortfolioProject.EntityLayer.Concrete.Announcement>
@{
    ViewData["Title"] = "Duyurular";
    ViewData["Subtitle"] = "Tüm duyuruları görüntüleyin ve takip edin";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<div class="row g-4">
    <!-- Header Section -->
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="text-primary mb-1">
                    <i class="fas fa-bell me-2"></i>
                    Duyurular
                </h2>
                <p class="text-muted mb-0">Toplam @Model.Count duyuru bulundu</p>
            </div>
            <div class="d-flex gap-2">
                <a href="/Writer/Dashboard/Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>
                    Dashboard'a Dön
                </a>
            </div>
        </div>
    </div>

    <!-- Announcements List -->
    @if (Model.Any())
    {
        <div class="col-12">
            <div class="row g-3">
                @foreach (var item in Model)
                {
                    string badgeClass = "";
                    string iconClass = "";
                    
                    switch(item.Status)
                    {
                        case "Yeni Yazı":
                            badgeClass = "bg-danger";
                            iconClass = "fas fa-pen-fancy";
                            break;
                        case "Yeni Video":
                            badgeClass = "bg-warning";
                            iconClass = "fas fa-video";
                            break;
                        case "Konferans":
                            badgeClass = "bg-info";
                            iconClass = "fas fa-microphone";
                            break;
                        case "Yeni Workshop":
                            badgeClass = "bg-success";
                            iconClass = "fas fa-chalkboard-teacher";
                            break;
                        case "Bootcamp":
                            badgeClass = "bg-primary";
                            iconClass = "fas fa-laptop-code";
                            break;
                        default:
                            badgeClass = "bg-dark";
                            iconClass = "fas fa-info-circle";
                            break;
                    }
                    
                    <div class="col-lg-6 col-xl-4">
                        <div class="announcement-card" data-bs-toggle="modal" data-bs-target="#announcementModal"
                             data-id="@item.ID"
                             data-title="@item.Title"
                             data-content="@item.Content"
                             data-status="@item.Status"
                             data-date="@item.Date.ToString("dd MMMM yyyy")">
                            <div class="announcement-header">
                                <div class="announcement-icon">
                                    <i class="@iconClass"></i>
                                </div>
                                <div class="announcement-badge">
                                    <span class="badge @badgeClass">
                                        @item.Status
                                    </span>
                                </div>
                            </div>
                            <div class="announcement-content">
                                <h6 class="announcement-title mb-2">@item.Title</h6>
                                <p class="announcement-preview text-muted">
                                    @(item.Content?.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content ?? "İçerik bulunamadı")
                                </p>
                            </div>
                            <div class="announcement-footer">
                                <div class="announcement-date">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        @item.Date.ToString("dd MMM yyyy")
                                    </small>
                                </div>
                                <button class="btn btn-sm btn-outline-primary w-100">
                                    <i class="fas fa-eye me-2"></i>
                                    Detayları Gör
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="col-12">
            <div class="empty-state text-center py-5">
                <div class="empty-icon mb-4">
                    <i class="fas fa-bell fa-4x text-muted"></i>
                </div>
                <h4 class="text-muted mb-3">Henüz duyuru yok</h4>
                <p class="text-muted mb-4">Şu anda görüntülenecek duyuru bulunmuyor.</p>
                <a href="/Writer/Dashboard/Index" class="btn btn-primary">
                    <i class="fas fa-arrow-left me-2"></i>
                    Dashboard'a Dön
                </a>
            </div>
        </div>
    }
</div>

<!-- Announcement Detail Modal -->
<div class="modal fade" id="announcementModal" tabindex="-1" aria-labelledby="announcementModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="announcementModalLabel">
                    <i class="fas fa-bell me-2"></i>
                    Duyuru Detayları
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label fw-bold text-muted">Başlık</label>
                        <div class="form-control-plaintext" id="modalTitle"></div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold text-muted">Durum</label>
                        <div class="form-control-plaintext" id="modalStatus"></div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-bold text-muted">Tarih</label>
                        <div class="form-control-plaintext" id="modalDate"></div>
                    </div>
                    <div class="col-12">
                        <label class="form-label fw-bold text-muted">İçerik</label>
                        <div class="announcement-content-display" id="modalContent"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <a href="/Writer/Default/AnnouncementDetails/" class="btn btn-primary" id="modalDetailsLink">
                    <i class="fas fa-external-link-alt me-2"></i>
                    Tam Detaylar
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const announcementCards = document.querySelectorAll(".announcement-card");
        const modalTitle = document.getElementById("modalTitle");
        const modalStatus = document.getElementById("modalStatus");
        const modalContent = document.getElementById("modalContent");
        const modalDate = document.getElementById("modalDate");
        const modalDetailsLink = document.getElementById("modalDetailsLink");

        announcementCards.forEach(card => {
            card.addEventListener("click", function () {
                const id = this.dataset.id;
                modalTitle.textContent = this.dataset.title;
                modalStatus.textContent = this.dataset.status;
                modalContent.textContent = this.dataset.content || "İçerik bulunamadı";
                modalDate.textContent = this.dataset.date;
                modalDetailsLink.href = `/Writer/Default/AnnouncementDetails/${id}`;
            });
        });
    });
</script>

<style>
    .announcement-card {
        background: white;
        border-radius: 20px;
        padding: 1.5rem;
        border: 2px solid var(--border-color);
        box-shadow: var(--shadow-md);
        transition: all 0.3s ease;
        cursor: pointer;
        height: 100%;
        display: flex;
        flex-direction: column;
        position: relative;
        overflow: hidden;
    }
    
    .announcement-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    }
    
    .announcement-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-lg);
        border-color: var(--primary-color);
    }
    
    .announcement-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
    }
    
    .announcement-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        border-radius: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
    }
    
    .announcement-badge .badge {
        font-size: 0.8rem;
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
        font-weight: 500;
    }
    
    .announcement-content {
        flex: 1;
        margin-bottom: 1rem;
    }
    
    .announcement-title {
        color: var(--text-primary);
        font-weight: 600;
        margin: 0;
        line-height: 1.4;
    }
    
    .announcement-preview {
        font-size: 0.9rem;
        line-height: 1.5;
        margin: 0;
    }
    
    .announcement-footer {
        margin-top: auto;
    }
    
    .announcement-date {
        text-align: center;
        margin-bottom: 0.75rem;
    }
    
    .empty-state {
        background: white;
        border-radius: 20px;
        padding: 3rem;
        box-shadow: var(--shadow-md);
    }
    
    .empty-icon {
        color: var(--text-secondary);
    }
    
    .announcement-content-display {
        background: var(--light-color);
        border: 2px solid var(--border-color);
        border-radius: 15px;
        padding: 1rem;
        min-height: 120px;
        line-height: 1.6;
        color: var(--text-primary);
    }
    
    .modal-content {
        border: none;
        border-radius: 20px;
        box-shadow: var(--shadow-lg);
    }
    
    .modal-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        border-radius: 20px 20px 0 0;
        border: none;
    }
    
    .modal-title {
        font-weight: 600;
    }
    
    .btn-close {
        filter: invert(1);
    }
    
    .form-control-plaintext {
        background: var(--light-color);
        border: 2px solid var(--border-color);
        border-radius: 10px;
        padding: 0.75rem 1rem;
        color: var(--text-primary);
        font-weight: 500;
    }
    
    @@media (max-width: 768px) {
        .announcement-card {
            margin-bottom: 1rem;
        }
        
        .d-flex.justify-content-between {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }
        
        .announcement-icon {
            width: 50px;
            height: 50px;
            font-size: 1.2rem;
        }
    }
</style>